#!/usr/bin/env python3
# from typing import *

from collections import deque

# def solve(N: int, K: int, P: List[int]) -> int:
def solve(N, K, P):
    Q = [x for x in range(len(P))]
    for i,p in enumerate(P):
        Q[p-1] = i # 値がどこにあったかを示す配列を作成
    
    b = deque()
    for x in Q[0:K]: b.append(x) # 初期値
    mn = min(b) # 初期値
    mx = max(b) # 初期値
    rng = mx - mn
    #for i in range(len(P)-K+1):
    for q in Q[K:]:
        # Kの範囲の値の最大と最小の差が最も小の範囲を探す
        b.popleft()
        b.append(q)
        r = max(b) - min(b)
        if rng > r: rng = r
    return rng

# generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
def main():
    import sys
    tokens = iter(sys.stdin.read().split())
    N = int(next(tokens))
    K = int(next(tokens))
    P = [None for _ in range(N)]
    for i in range(N):
        P[i] = int(next(tokens))
    assert next(tokens, None) is None
    a = solve(N, K, P)
    print(a)

def main2():
    with open("./abc352/abc352_d/test/sample-3.in") as f:
        a,b,_ = f.read().split("\n")
    N,K = list(map(int, a.split()))
    b = list(map(int, b.split()))

    P = [None for _ in range(N)]
    for i in range(N):
        P[i] = int(b[i])
    a = solve(N, K, P)
    print(a)

def main3():
    import generate
    N, K, P = generate.gen()
    a = solve(N, K, P)
    print(a)

if __name__ == '__main__':
    main()

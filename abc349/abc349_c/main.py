#!/usr/bin/env python3
# from typing import *

YES = 'Yes'
NO = 'No'

# def solve(S: str, T: str) -> str:
def solve(S, T):
    if S[-1] == "\n": S = S[:-1]
    if T[-1] == "\n": T = T[:-1]
    a = NO
    cdic = dict(zip("ABCDEFGHIJKLMNOPQRSTUVWXYZ","abcdefghijklmnopqrstuvwxyz"))
    if T[-1] == "X": T = T[:-1]
    count = 0
    lengthS = len(S)
    lengthT = len(T)
    for i, t in enumerate(T):
        c = cdic.get(t)
        for j, s in enumerate(S[count:]):
            if s == c:
                if i != lengthT-1:
                    count += 1
                break
            else:
                count += 1
    if count < len(S): a = YES
    return a
    #pass  # TODO: edit here

# generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
def main():
    S = input()
    T = input()
    a = solve(S, T)
    print(a)

def main2():
    str1 = "./abc349/abc349_c/test/sample-2.in"
    with open(str1) as f:
        S, T = f.readlines()
    print(S,T)
    a = solve(S, T)
    print(a)

    with open(str1.replace("in","out")) as f:
        b = f.readlines()
    b = b[0][:-1]
    print(b)

def main3():
    import generate
    S, T = generate.main()
    a = solve(S, T)
    print(a)

if __name__ == '__main__':
    #main()
    main2()
    #main3()

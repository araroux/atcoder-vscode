#!/usr/bin/env python3
# from typing import *

def serch1(k, A):
    c=0
    for a in A:
        if a<=k: c += 1
        else   : break
    return c

def serch2(k, A):
    la = len(A)
    s = 0
    t = la-1
    c = t // 2
    while(1):
        if k < A[c]:
            t = c
        elif A[c] < k:
            s = c
        c = ((t-s) // 2) + s
        if s==c or t==c:
            break

    if k<A[s]: ret = 0
    elif A[t]<=k: ret = la
    else: ret = t
    return ret

# def solve(N: int, l: List[int], r: List[int]) -> int:
#def solve(N, l, r):
def solve(N, L, R):
    LR = []
    for l,r in zip(L,R):
        LR.append([l,r])

    LR = sorted(LR)

    L = [a[0] for a in LR]
    R = [a[1] for a in LR]

    #print(L,R)
    sum = 0
    ret1 = []
    ret2 = []
    for i,r in enumerate(R[:-1]):
        #c1 = serch1(r, L[i+1:])       
        c2 = serch2(r, L[i+1:])       
        #ret1.append(c1)
        #ret2.append(c2)
        sum+=c2
    return sum

# generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
def main():
    N = int(input())
    l = [None for _ in range(N)]
    r = [None for _ in range(N)]
    for i in range(N):
        l[i], r[i] = map(int, input().split())
    a = solve(N, l, r)
    print(a)

# generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
def main2():
    with open("./abc355/abc355_d/test/sample-4.in") as f:
        a = f.read().split("\n")
    N = int(a[0])
    L = []
    R = []
    for i in range(1,N+1):
        l, r = list(map(int, a[i].split()))
        L.append(l)
        R.append(r)
    a = solve(N, L, R)
    print(a)

if __name__ == '__main__':
    main()

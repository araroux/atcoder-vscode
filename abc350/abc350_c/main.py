#!/usr/bin/env python3
# from typing import *

# def solve(N: int, A: List[int]) -> Tuple[str, List[str], List[str]]:
def solve(N, A):
    pair = []
    index = 0
    for i in range(N):
        """
        # バブルソート これだと TLE
        for j in range(i,N):
            if A[i] > A[j]:
                tmp = A[i]; A[i] = A[j]; A[j] = tmp
                pair.append("%d %d" % (i,j))
        """
        # データは 1~Nが必ず1度ずつなので, その値の場所に直接格納すれば O(N)
        for j in range(N):
            if A[i] == i+1: break
            else:
                index = A[i]-1
                tmp = A[i]; A[i] = A[index]; A[index] = tmp
                pair.append("%d %d" % (i+1,index+1))

    print(len(pair))
    for a in pair: print(a)
    return

# generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
def main():
    import sys
    tokens = iter(sys.stdin.read().split())
    #with open("./abc350/abc350_c/test/sample-1.in") as f: tokens = iter(f.read().split())    

    N = int(next(tokens))
    A = [None for _ in range(N)]
    for i in range(N):
        A[i] = int(next(tokens))
    assert next(tokens, None) is None

    #n, a, b = solve(N, A)
    #print(n)
    #for i in range(n):
    #    print(a[i], b[i])
    solve(N, A)

if __name__ == '__main__':
    main()
